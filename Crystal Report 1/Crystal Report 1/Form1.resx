<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAcQAAABvCAMAAABFLUC0AAAABGdBTUEAALGPC/xhBQAAAbBQTFRFAAAA
        /////v7+9/f3//7/+/v78PHxkZKSDQ4Og4ODQUFBALq8ALm9AS8sALy3ALy0ALu54uLiAMyW3Nzcy8vL
        SUlJNDQ1w8PDAMmZAMyTAB4WAMO4tLS0ALytLCwtVFRVAM59AJ7xAKFxHBweAaGrYWFhAxsdAVRDAM9x
        5+fnANBrANFfAKDsALfAALLKAMmcAK7TALmeALHNAKjeAKPoAJ70qampAM2DAKXmAM53AK3EdnZ2ANBu
        AMCLJSUlALDRALXFAKfgACcqeXl5jo6OANRbAJv4AL2TAMOCADEkXV1eAAsFACkUAKzYAIhQFhYWACM1
        AGBdAKRkAA4VAFcqAB4VAKtJAZCwATc/AXeoAMBjAHVVAJFpAHBpAIRcAEQ1AFs+AJZ1AaKLAJiWAIyT
        AI2gAElYAE9sAGczAX06AV2MAIHFACMOAHBRADobAG+VARohAEgsAYClAGRMAExIAKWeALTfAI/AAW0u
        AZNGAHdPAIJ6AEFdAEsfAJXWALBqAGSdADZWAVp4ATRHAL1uAJJMACpHAUh0AVuSAFMwAL1XAXfAAJNX
        A0tSAXmbAZbDlNfqhgAAGJlJREFUeF7tnYmDE8eVxluj0WmcROjCE1kyjOWgwVeMEXaEBUYyxwxGGHvI
        csTGa8cZXxz22hiHmCyQzcaJw7+873vvVXf1pZGEGBhvfzCjVnVX1ev69aurq3ucRIkSJUqUKFGiRIkS
        JUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGiRP8ftLamG4m2qdYvXiL95lFxzNeKtmojDX/o
        CmRczGv4w1etqlmK+hr8AFp//42ndu7cefzDkxqwxSrWS2VPpUZRwx+6mo1SCVnTb6i8ZRk7Xc0SKpfK
        BQ2eXevvPwWGpIvPadDWqlhOZVKeKlUNf+hq1jVLaCGVmRbi2trJPzz57rv6bRo1KDtP2ZwGz6w1YgiI
        u3btOv6Bhm2tAHHB1dZC1ExJmVR6SoiXL334n09/9PEfP9HvU6hhnXEm8+AQT+4hiEzxpV0XH0mzaHni
        wuKWQ5R8sTElxMtvvHH8t0//6oUXX56eInmiZLyYmgvEy294EI/Pu1UcUdehWq2Ob7nt6nTrPVHzpX/T
        Qdy4fUIg/u7l+3/SsInlQiTNF+Kul+YKsdjO1SvaaShX6rl2Mabb+ThABMapIG7cO+hCfPvNaSnOGyJX
        p8QQjeL8ejajdqOTzriGks2ZdLae60WV03aEeOXC6wLxCYb4wxkNn1Dzhmg6NgRxbh2bUbuepQoq4xMH
        dLphRNsR4qcre21PfP4zDZ9Q84boXEd9Cog731/SoAdUtZ6mQrF6nCLiSJZny4VAC7kNIa6dW1FPJIiH
        337t+c+nG2jMHaLztVDcNafB/mhQAQxyPOpqktBnYIipRQKJoPKwpseytiHEL2yI8MTPp6tP5w/RWf9y
        z1NvXPpgPuOL5S4jXBCEYId/GkYikqlUTw9mJRDnAdFxlj6YV7+034V9aiJ/EDWSfGWfzKQavn7qdq9O
        GeKjrk7nqXwhtYjGEIXCyOCF+skswTC9qkeLtmfHxg/xUXds5qoqAWFYKBX8X4SdbLD8CjvitoToDjEE
        4qMeYsxV/Uoqg0aPLBT3o94MNhc5kD0x5IjbEqI92D/86Af7c1UvrfAEIiw1vxb5Oz4by3q0altCJIqu
        J+6/qmETaxOIa2tLm96lXzr5wfpDmeruU6mQ04EhrCRk+OEeqatUJVhW2xOiNQF+Z8rKdBOIa6c2bt68
        uXFKv0Zq7cr7t0+c/t7ujq4tLS1FUF07qnruOd24BsV3xNrkiOBme2Imk87wj/ZSF4bBKdRtCtG5vOfD
        3858K8rLOATxvXP73iLdHEfx+tlnDpL2eBTXfnPp0p6LoXHik+989NHHrD+Kfg999dXVW2eu6SF+jcg2
        GeCTxP/SpXpXVO+kiWAm7IjbFiKV0Nd/fnJtlkUd4yBeOffWW/ugm19oSFjK8ODB02aS7aRM2Rz/2kdx
        7b+++cUvfvXEEzt2vHDkyJEXX3zllcOHv4X2799/4+qfzkT4YzGLrqnaBndc6HRb5hxH7Vwlm1nIhBxx
        G0OcWeMgfrdPGO7b915cm3fKMDx49roGXSSEmDz134h68ptfE8MdhiFBfOXwyy+/Tdq//803X7sR0RC0
        Mx4N8FgoFXyXabFQXgg7YgLRBxGOqBRjK9R/PGMgnvheQj7Yo/Pfu760yK/9+de/hCfueOEFosgQD9sQ
        X3vt/K1gpTok03hcSEL7l+4G+qFOuzEIBiUQ/RD/4kH8McYVl75/xlA0ENURd+3aaTWTztGnGSI5IiAy
        RYIIhoBIDF979YfP/M6Yr1NtqpYxxECDDfUjbgwnEO1y+uKmCzHOFa/fDkJc924Kv2QtPX1SIKonapuo
        jiie+Oqrz5+/ZbeMIxrpu6bBys5kS/ESiL6L/VPqmyrEaFdkR1SIty9zEEPk+nR6iM//8HeLYp9guLah
        X5NAjNM4iFajGO2KV+CIClF7pz5P5BAWIP4yBBEUbYi7P7coNgFRLQPExW0EEdfcYwJxjVxRGe770XQ+
        LYkjCkR1RGdpkurU7tjYEInif2sEx6mV7OqUSiWiTYxSPMR8swVVm+HeUKRGxVZ7UCgUBu3V2gTDN9sT
        aXxrQRz1i5xzbcKMx6hfXSWb6F971VspNg4iXFEZ7lvZCNenV26/7kI8vS5hPogSBIWqU+7YaH0qEMFw
        9wHvdih7orENl3am3tJdYxUDsV8d5LoVVjdXaDclNF6jYg/L6zpQmaK0dRVIuzAgEVqCOyj0rHRiPHHU
        KuS6dc64kSusNqMuh+UeUtVEKdWYSyZfHVBKalO5nuvpkgYsHpaMIyDarnguXJ/S+MJANI44CcRnrRmb
        +/ddiFyf7j7wV1OhLtsdGyoVKpbG6gSXciTEUQ9zPBqeSWfLDVMAMWrl6qW0HA5l0uUuY8xXsijCLKuT
        rVjXVSTE5dVuJZs1KaWzlcawGkZU41QlTfosR55mvjqsd9xTI6U7OsQaC9HZ+HGMK66f9iAaR5ygOn32
        p/9w9cknn9z5yq5Odx84YCpUGWJ4pQKKlVxrU4xREKvDMofJQjneVRrn18VCBeUuC+zwm8zIlLtwuzLH
        NipHQ4TBDLHf5YyxrAupYHe2PggNjKjp8ERduIiTBMIs9nJKEFLr5HAjbjzEU+cU4b6VsCtev8e1KSCe
        +FLDJvDEZ/0zbO/evXMDFA3EY64r5hicEUaKjHG1GTE4tBQBUZY8eqLzp4Qrw5g6tdlr0BWPA3mWHVuL
        jLFRzOdRPxhlFuIgapvY7JIpfKBIMi4XgpBqZfcQOihVCkPM0zloIXgio7Ll9mYQne9+VIhhV1w/LQwB
        0Z1zm8QTg0uK83evvim1KUM8ZlyxTc0g38vHjWCFQHVIudEdVMf4YxBi0VmtCxJLTCfb1Sh+NXOljC7l
        MVAkd2qVu7lOKrOo9QMV9ziINafWxX0YW7idjfnDgP01slmjLkZCzLcrvnMQnkgsVe5RxmMhnrppEIZc
        0TgiQTzxvotrAk8Mrwu/ducHt008duyf6op0ZmIumUafsFq+ZzqV7qAV548BiOVeT89fU/DSSnWiatRm
        Lkv7ubDNpJ9CpLzTWfKYRVklQgU2DmKmt9pIq9vCEnzwb1KQIiCamLQVgjiic1Cb5ChswDx8L9U7XsZR
        ED1XXFlZ2dAwFjmiW5ve9sYfM0F03r3qtYmuK+ZzbKwWGKzESUBo0yvddrQ7BiCmSyUtSCshToq2IubP
        mSE7jIuQRJEkEf40e+Ih4thSWfyQv0owiUkslAcaSWRBRKpBiHlmCIqclJsYpSW1gpV+FETjisRw3zn7
        jtQV44iE0XNEG+KuySE6186/+rzxxGN/1cBqiSwk27kIpTzkA1tUr0Zj9EOUU+RPPlFJAlt8szJ0vuKH
        JFNnsjhbLX94mXs9xEA0efCRtIVoJliukIavc2xDjKhOqS4FQYqrx6g4cTbKZBwNkTqoLkXbFdfeU0ck
        hpYjzgrRufuD2ya69Wk+p/ahGExBqNFoBNKlbjvcXQ9AhFB27ld8of9SJqWgKw6oatJoyNaVBqLY6Ndm
        EDUFyYhD9avZFZhDHO+Jq+KHtjmu+ERsUyMhmg4qXPFvnsd9cdaDaDnizBCdqx7EY/+jYUXzCCxddCg3
        OQ8OgVCrDkPPKgY9UY7VXrkJkeKk8w+ccLXORy9ydpKALauwoLGeqBEkX86VU+XLgORzxbEQm12O4D93
        FQi61xQrEqJpFeGJF65oGA30XYbPnDADfWhmiLd+cNvEY3/XMKeFJltLhH/DTN6iHzqBRRp1BVYs+iCi
        0E00Eb4hUJKhRi1QXmk9QA6Ww13hK6rDTT1RIvLhRqifhaH4DoYGrsZC7FGrQpL4yALfRIswhoNdRUO0
        XHHlUw1z1s/udSmetW/hzwzx2nkX4u7/1TBnVKCxsjqjFIiWPv9Q40IjcV9pkGyIqMo4Xqne6HYb1I3z
        ypdC6VfWm1oltblDzPs0rmyL+Bu+m1KL69igwDVqVjIu07bYTXE5947dtRkHsdZgQxENGyw+jkVfiKR+
        gaIhrknXBgxXLphRBjmigXhP7waLZobofBYB0Rm1cApo1qk7YezXH/6GbkD8Mn44K/2UuqvFJqnY7lK3
        RSNSCrQrM9RoED/5gZ0sbFFK1IHKDYfdCl0AcjlRmWmpxfZOhVQqVen2apxxK1fWaxFR8ZnOWWOkcRB7
        Uhup3SQ6kvrmhUJh2C0hHNKopGiIzl9QnzJD1xXZEZXiWd/w8YEhUm2623RPoSKVO1mGKkgkZ0M/DAEU
        /cuHQx2bbMNMXjv5fqHDYZwM7afIuguyHRFXOG1l671ic3k06hdXu/BjouD1TuMg0m62t15dNh2vZU6b
        91Iq2LQbxTEQm+bCQiQok6ITKvZH+fyoWS3UsRDJTZgUA5FdccXnileAUBge9DniXCAesCE6zXaDMfIZ
        qKUkcgdc71B6aPdRfRBxfr76dqStHkNEidS9uPkCD+xMXGyWC95NqD71EtmKTT2REsf15ev6LueEAueL
        A+vW3jEQ27gjh1gSnSzuDD2b8jUMpumS0bixENkVFeLKaQ7ZiHPEuVSnfogGo5wDenj0wT8s+prK2qUV
        8MRUaWAjdnpZJANhP0HUcBK1PhIMsR+We755oSLmtyjYHBTviXDXwCC0ars57bZudI6B2OcZZCBUijQ4
        8VU8I6aI/6I4iA65oiBUV1y/xxCZot8RH4InQn2qy3CWfBZSWYndXGstpLoWpyDEuv+eUx+DLuyiH8Tu
        eGXZophuVYmopeCNPRS2xzAWIg5ZTJX8GfNuOoAOwXWYsu9ixUOUCwuxkChtZEOz5zm5slSxEMkVlaG0
        iht7XU8MOOL820TVqNZryF0dspgZMgYubLo6LVe0IdLeTHChYy5tvIkchoZxXmXb7njFwYWdCw1CV7mz
        rFmPhbiQsrtMpPyAp9URl+u/ySBWvQfDKA5OJ3TrZVnrB40dB5FaRUXIrmgcERT/pYcYWRCnmDslnfnc
        80Svd2orX+t1cd8NGCEtMt607PZ7Ynh5VQGNImMgh1i0IC4PeaLcxMz4itmIpx84NikOIu2nDd9D6KRV
        9Iyl9cL+ySD2MIeO1JA22VQODotJPc/sMRB9rnjd2TgkDAnivX/oEUYzQ7xlzdh4C22CIn/k22p8cZry
        oA2rZQtADJ01Q+TY8MRFDyLVXFpeHJUcMVhxkdpcFepB4zwxlQleAjIVzAdg/0QQ8wO+EcLRONWwI9LV
        Z69GiodoueKhv522HPGsHuDKB3Gy+4mi8wYiYTTTbpGqYqxnOLDo0+raBCCG3Kmg1Sk8kbpJAYimMOii
        z/rvNIj6XGB61FiI1kIp0SwQRwW6Gkwc+pf1P8mg8kYh4yA6G6Zrc+jQoZW9JIUYdMSZPfGWuZ9I3dN/
        alicVnnIxSUlok+vRIIQfVMyJGkTEX8TiFE1l+NwA6QHTQmRzIapfMSEELlzKsHU4aLhRbCOZhXkID5w
        DMQrFwxEECSEQvFf1tS3aEaIZ27AEbU6dadO40QDZ3QsrRJJed2TzSC2ZCqSIkdAxNhTYtLgIxiTJa/z
        kIPiINL+OIhu33dCiJydCAsdSpEQuVFUs8ZAdD5VhocO7SWOBmLIEWesTq+d53vC7Imb1KYsnYryTi/l
        VX2bQWxW+D4W/Y/2REl0DETpG0NTe6LbdMGw6TyRekSLDwrx1DmhSK7IzhjjiLN54pnzsu5UPHGz2pTE
        F7UWN4k2vP78ZhBrZTnjGIjGVaI7p7ooSXOO9UQU+byrU4YYXZ0OAFEPHAfRdUVhKBBl+sanWTzx7nl7
        tZu7ZnGMahWYbE4PddRUELVV28QTIwtsxO6kGcdDpCOiIapg2CQQrY4NQVykjo3u8EmqeDFrLMRTFwSi
        MATEZ257txddTeuJ7+qSRXe12wGfI8ashgpApE/v5CbyRN4bgChTzVrQtJWx7zMYtdJ8o4mP2QKIeX6B
        iAgnnOmG5h9IuoySjxwLUVzRMGRPjHDESSD+dFSXDpM+ufPv+/vftCFaT2NQuQwj2yUDkc+MuzjWyHpm
        iHlz0wfCRlSjaIPeAohOj8dTCGaGkXV8S2aaJoF4hV3Rc8TX70U44gQQXzjy7O+gyAdqDhywu6b5nq+U
        PLWoPMhimE0fmI/yDpsZIk+7yYwK0sSgLOSKVXmPgB60BRBb7GUIplwJYjo8A5FHrxrH8GHjIfpcMc4R
        J4LoPtr27bfWAzUC0fd+QSqWVLkX8VdCCm7vlP9Tu+Ghmh2iTICrkHzF2ydqat9Hez9bAJEaalhCwbhU
        6accetqmAGeV/Yg9HiJaRQwxFOK9iIfdpoQY8WibzTBfyJBd2Xov8GBZvk0ccO3xPyhV9majZodYtG9F
        8VbdfVsHC6vyEW4Gk1sAcaSIBBK2Km1f/ZDnCpf/S+zxEJ2bXnW69/W9walvkQ9iZO/UPJ/4ivfMvgvR
        /57PFvkbTMs2fN446kllil0GorUgf3aIclOYdyEqNuvuogDaXe3Kvcit9ESpHjg/dKjofNOVntW56RNk
        3639zSBueB0b8kTfenBXDBEUJ/FEYcgQuWNz3sdwxJ0IEjAW2tXm8iiPZRIFKgy3Icdv+rBGA7NDxF10
        s8+kXM6t8l+byjerhQoGF5ovaysgcn1q25RKlXItqZtGtdUuN9JuuptDXDvnQdx7O3AjUeWDGOeJERDh
        iX6GTkvt4yeSsG4/NywMc40SOvkoSz4hLla7Nn0QiLqeRR0Nm8Si3BgOeoNCt+I9lcS7SVsB0ddnRrq0
        nal0C71ebzBslMUmL+FNITrvWb3TaEecrk30QQy9AoVKFMVMxLjvRebKM3lit5guDK1R4gNBDLoiRBuZ
        NMkNMLtJWwFRXdEyijvQmXQ2yw/N8j7TSJM2hbh+220Tb8e9Keyi+zZ++z028R0bbRNvfHZXDzVa5cqe
        l9Rg2SFshXjL9URApKK0F0I8CMRal+tpNyvKRy8gjDkQLr84ZIsg6kQxxWB6vGny4S2y0aK4KUTnvUMr
        Ou0W44jeXzfx/0mFeIjsiTf8r7CBMPphY/EfJWgqUZKxXk8p5bvJ9iAQMSzjXHg/yeTpXUbIVPZtFcRm
        Lit9ALIB+/GbrXHlpTsJxLVPlWFMiwi573az39AXgHhEIGKceP/+jat37obfswhHZAPlAhQ75buWFa5B
        lHLGvxRqcohM0Q8xzz169wBPuNgpUPaZvVsD0akiYeTr3igTcSBKwaa4OURnCRQPXfCeDA7r5CWqUHfu
        Ov61PUdqQTyiL17gN2X+/t937twNOiHUN44IESnZgHiTradwTFTbBUmaGCKVSMgTea2yJG4LhyIxbpW9
        vVsEcTSgmHBEi5UIIbDJyngCiM7ad2fPnt2ImnBzdfJy+H2nFkTf3GmEC4qwqgilRcbRf7vS9yQVX3DF
        wsQQceq+1W4spcj78d+TicZGsbYIorPMFH31vIq+exGhxUkgOs6pK/FVqWrp5EkfQj/EiJvCYRWxsA1W
        s+EoOC5zNVW+4HumFFxXOEV1SgeEILq+KHmQr+K3hKRSlQruKpgramqIxjCkNQVEQxGm8LVLR9EvuCZ9
        dGjw4+Y7IcSZZEM8qmHj1ew1bIxUbjBUOqsIl4FHpm5PX7AmgqgYIjxRKHoZQ9KtoVTrLZBwS2xmiGzY
        FBCZotqEhpGzwTZtdAa8MJ2jgvDjBJHOrNfokFlmmSkuO772zNnQRroRRCQQ9QBSBEQsz1DhHTUhiE5x
        CH/j5k/aIWZIn7g3VaFWh7+SIl6BYhTx52iZv6sARM8mihqG6CxzYegRKBX2QvpVGuD+mBX78YIIjPLw
        Fj9rK0bDegnAs3/DYEGRCCLO0ijCE3UPayECopPnJ6A4Gykdzq6DPxSet1Nf8HtiRYNFoT8MXbXfOESG
        2RAneBlRbVjmv17HRrlFwA+8N3w2PWYQGSMeDIRxbD1LLM7WCxEv2ALEBcywqDKhO7u1iu4SWc9iWEK+
        eIgH+Up2HXmRWL6S0ohQxu+JPLXjKuyJ9v6M3xM1lJUpRd2+d/qrOWCE1Ki0vk+pYduUfuwgUtFUe916
        yX07GiuTxZtsqtFrN/o9ftGdkXUbQrTs3+9/7slVvtYq0PVDJUrZpTulrvmrqb2hRmTZL+gbtTVQFcw4
        YJgdNWhT1MVJ6q8WGuUOT7dl+DVx+pK0VY2nirws56DZIZL6xXZv2OD3FJbpp94YDtrVfsyJUvn7paGe
        NFylgREaNVuEJVfvDgu9VXc+QaMZaShLg4w01JOGG2koS4OMNDSsUY1sGg4b9Vyh1+LbK5DGMtLQueuB
        IJLyy7VqsVpttfDHvWvu87cPXXhEuLYc7ayPSvnl5Vox6u3nD1sPCjHRY6AE4s9ABPEXCcRtrsQTfwZK
        PPFnoMQTfwZa+gYQnwDEdzQo0bbTH1CdMsSfNCTRttNR/Ok9qk53fBx1Hz/R9tDRj8gXn9jx8ZZNtiR6
        CHruHdJPgTv+0XKc/wMUt22wGn5XkQAAAABJRU5ErkJggg==
</value>
  </data>
</root>